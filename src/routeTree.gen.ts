/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FriendsImport } from './routes/friends'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const GamerLazyImport = createFileRoute('/gamer')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const GamerLazyRoute = GamerLazyImport.update({
  path: '/gamer',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/gamer.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const FriendsRoute = FriendsImport.update({
  path: '/friends',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/friends': {
      id: '/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof FriendsImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/gamer': {
      id: '/gamer'
      path: '/gamer'
      fullPath: '/gamer'
      preLoaderRoute: typeof GamerLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/friends': typeof FriendsRoute
  '/about': typeof AboutLazyRoute
  '/gamer': typeof GamerLazyRoute
  '/login': typeof LoginLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/friends': typeof FriendsRoute
  '/about': typeof AboutLazyRoute
  '/gamer': typeof GamerLazyRoute
  '/login': typeof LoginLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/friends': typeof FriendsRoute
  '/about': typeof AboutLazyRoute
  '/gamer': typeof GamerLazyRoute
  '/login': typeof LoginLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/friends' | '/about' | '/gamer' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/friends' | '/about' | '/gamer' | '/login'
  id: '__root__' | '/' | '/friends' | '/about' | '/gamer' | '/login'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  FriendsRoute: typeof FriendsRoute
  AboutLazyRoute: typeof AboutLazyRoute
  GamerLazyRoute: typeof GamerLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  FriendsRoute: FriendsRoute,
  AboutLazyRoute: AboutLazyRoute,
  GamerLazyRoute: GamerLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/friends",
        "/about",
        "/gamer",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/friends": {
      "filePath": "friends.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/gamer": {
      "filePath": "gamer.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
